{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "d186fccfb8157764",
        "type": "tabs",
        "children": [
          {
            "id": "9568f2808a47381a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/architecture/一口气说出 6种 延时队列的实现方法，面试官也得服.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "内核漏洞学习-HEVD-StackOverflowGS",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/architecture/一口气说出 6种 延时队列的实现方法，面试官也得服.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/architecture/一口气说出 6种 延时队列的实现方法，面试官也得服.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/architecture/一口气说出 6种 延时队列的实现方法，面试官也得服.md"
              }
            }
          }
        ],
        "currentTab": 3
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "9568f2808a47381a",
  "lastOpenFiles": [
    "coding/network/Wireshark的抓包和分析，看这篇就够了！.md",
    "coding/architecture/一口气说出 6种 延时队列的实现方法，面试官也得服.md",
    "coding/architecture/为什么我们需要Pulsar？.md",
    "coding/cpp/Glibc.md",
    "coding/cpp/如何在嵌入式中使用设计模式的思想？.md",
    "coding/architecture/开源微服务编排框架：Netflix Conductor.md",
    "coding/architecture/并发场景下的幂等问题——分布式锁详解.md",
    "coding/architecture/手动埋点转无痕埋点，如何做到代码“零”入侵.md",
    "coding/architecture/如何从零设计一款高并发架构（建议收藏）.md",
    "coding/architecture/多图详解Kafka中的数据采集和统计机制.md",
    "coding/java/记一次Quartz重复调度(任务重复执行)的问题排查及解决，被老大骂了！.md",
    "coding/network/如果让你来设计网络，你会把它弄成啥样？.md",
    "coding/architecture/美团搜索多业务商品排序探索与实践.md",
    "coding/architecture/vivo统一告警平台建设与实践.md",
    "coding/architecture/分布式一致性算法Raft.md",
    "coding/os/深入理解DPDK架构 经典PDF分享.md",
    "coding/architecture/Untitled",
    "coding/architecture/玩转直播：如何从 0 到 1 构建简单直播系统.md",
    "coding/reverse-engineering/某视频app(V15.7)及web分析记录.md",
    "coding/golang/Golang 闭包的实现.md",
    "coding/reverse-engineering/2021看雪SDC议题回顾 Chrome 浏览器解优化过程中的漏洞安全研究.md",
    "coding/reverse-engineering/超过 90 秒的任务不自动化，你好意思说自己是黑客？.md",
    "coding/reverse-engineering/Untitled",
    "coding/architecture/浅谈 Apache APISIX 的可观测性.md",
    "coding/database/面试官：说说MySQL 事务的实现原理.md",
    "coding/java/为什么不建议直接使用 Async 注解？.md",
    "coding/architecture/亿级流量架构实战之秒杀设计.md",
    "coding/reverse-engineering/通过对PsSetCreateProcessNotifyRoutineEx的逆向分析得出的结果来实现反进程监控.md",
    "coding/database/Untitled",
    "society",
    "self-improvement/learning-method",
    "coding/os/Untitled",
    "coding/rust",
    "coding/algorithm",
    "gitpush.sh",
    "coding/golang",
    "Pasted image 20240804095201.png"
  ]
}