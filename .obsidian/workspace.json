{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "30d24f811d1b06b5",
        "type": "tabs",
        "children": [
          {
            "id": "550c24418126d846",
            "type": "leaf",
            "state": {
              "type": "image",
              "state": {
                "file": "0x99-image/Pasted image 20240914191904.png"
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "图解 Linux  管道通信的原理？",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "0x99-image/Pasted image 20240914191904.png",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "0x99-image/Pasted image 20240914191904.png",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "0x99-image/Pasted image 20240914191904.png"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "97c141a77dfb8bbf",
  "lastOpenFiles": [
    "coding/os/linux/memory/userspace/i_用快速固定块内存分配器替换 malloc free.md",
    "coding/os/linux/memory/userspace/p_深入探索共享内存：实现高效的多线程通信.md",
    "0x99-image/Pasted image 20240914192241.png",
    "0x99-image/Pasted image 20240914192234.png",
    "0x99-image/Pasted image 20240914192223.png",
    "0x99-image/Pasted image 20240914192211.png",
    "0x99-image/Pasted image 20240914192146.png",
    "0x99-image/Pasted image 20240914192139.png",
    "0x99-image/Pasted image 20240914192045.png",
    "0x99-image/Pasted image 20240914192036.png",
    "0x99-image/Pasted image 20240914191904.png",
    "test/self_notes.md",
    "0x99-image/Pasted image 20240914164257.png",
    "coding/os/linux/memory/userspace/d_所谓的0拷贝不就是为了让CPU休息吗？深入理解mmap.md",
    "coding/os/linux/memory/userspace/a_30 张图带你领略 glibc 内存管理精髓.md",
    "coding/os/linux/memory/userspace/万字长文图解 带你领略 glibc 内存管理精髓.md",
    "coding/os/linux/memory/userspace/k_从用户态、内核态、全局变量、BSS函数看进程运行状态.md",
    "coding/os/linux/debug/p_一例hardened_usercopy的bug解析.md",
    "coding/os/linux/memory/userspace/p_Jemalloc内存分配与优化实践.md",
    "coding/os/linux/memory/userspace/k_一文读懂零拷贝技术｜splice原理与实现.md",
    "coding/os/linux/memory/userspace/i_mmap在arm64背后的那个深坑.md",
    "coding/os/linux/memory/userspace/k_Linux Mmap映射：优化文件访问和共享内存.md",
    "coding/os/linux/memory/userspace/free() 函数只传入一个内存地址，为什么能知道要释放多大的内存？.md",
    "coding/os/linux/memory/userspace/d_copy_{to,from}_user()的思考.md",
    "self-improvement/learning-method/a_s如何构建知识体系？.md",
    "README.md",
    "coding/os/linux/memory/userspace/k_7 张图，轻松掌握零拷贝原理.md",
    "coding/os/linux/memory/rmap/d_逆向映射的演进.md",
    "coding/os/linux/memory/rmap/a_郭健： Linux内存逆向映射（reverse mapping）技术的前世今生.md",
    "self-improvement/meditation/觉性的奇迹（六）.md",
    "coding/os/linux/memory/virtual-memory/b_深入理解Linux内核之mmu-gather操作.md",
    "coding/os/linux/memory/virtual-memory/b_虚拟内存 & IO & 零拷贝.md",
    "coding/os/linux/memory/virtual-memory/d_深入了解iommu系列四：interrupt remapping 工作机制解析.md",
    "coding/os/linux/memory/virtual-memory/b_TLB flush操作.md",
    "coding/os/linux/memory/virtual-memory/k_深入理解TLB原理.md",
    "coding/os/linux/memory/virtual-memory/t_深入理解TLB.md",
    "coding/os/linux/device/device_tree",
    "coding/os/linux/device/device_model",
    "coding/os/linux/device/GPIO",
    "coding/os/linux/io/epoll",
    "coding/java/Spring",
    "coding/cpp/opensource/qt",
    "coding/cpp/opensource/protobuf",
    "coding/cpp/opensource/memory",
    "coding/cpp/opensource/boost",
    "coding/algorithm/sort",
    "Untitled.canvas"
  ]
}