{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "76cdcf27b971e749",
        "type": "tabs",
        "children": [
          {
            "id": "d22de2f394be7866",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/architecture/并发模拟的四种方式.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/architecture/并发模拟的四种方式.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/architecture/并发模拟的四种方式.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/architecture/并发模拟的四种方式.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "d22de2f394be7866",
  "lastOpenFiles": [
    "coding/compiler/编译乱序(Compiler Reordering).md",
    "coding/java/MappedByteBuffer VS FileChannel：从内核层面对比两者的性能差异.md",
    "coding/java/Java依赖冲突高效解决之道.md",
    "coding/java/concurrent/深入理解并发编程艺术之内存模型.md",
    "coding/java/opensource/记一次Quartz重复调度(任务重复执行)的问题排查及解决，被老大骂了！.md",
    "coding/java/opensource/Dubbo 路由及负载均衡性能优化.md",
    "coding/java/为什么不建议直接使用 Async 注解？.md",
    "coding/java/JVM/深入理解Java内存架构.md",
    "coding/java/opensource/Netty如何高效接收网络数据？一文聊透ByteBuffer动态自适应扩缩容机制.md",
    "coding/java/关于java单线程经常占用cpu100%分析.md",
    "coding/java/opensource/小小的引用计数，大大的性能考究.md",
    "coding/java/opensource/用 Dubbo 传输文件，被老大一顿揍。。.md",
    "coding/java/opensource/这些年背过的面试题——Netty篇.md",
    "coding/java/opensource/抓到Netty一个隐藏很深的内存泄露Bug 详解Recycler对象池的精妙设计与实现.md",
    "coding/java/opensource/阿里终面：Netty 如何做到单机百万并发？.md",
    "coding/java/opensource/深入理解 Netty FastThreadLocal.md",
    "coding/java/opensource/真正的缓存之王，Google Guava 只是弟弟.md",
    "coding/java/JVM/Java 内存泄漏排查，新技能+1.md",
    "coding/java/Java系列 远程热部署在美团的落地实践.md",
    "coding/java/concurrent/Synchronized原理解析——如果你愿意一层一层剥开我的心.md",
    "coding/database/十亿级流量下，我与Redis时延小突刺的战斗史.md",
    "coding/java/看下有多少人对Java感兴趣？.md",
    "coding/java/concurrent/指令重排序导致的可见性问题.md",
    "coding/java/concurrent/打通 JAVA 与内核系列之 一 ReentrantLock 锁的实现原理.md",
    "coding/java/JVM/带颜色的JVM：三色标记详解.md",
    "coding/java/opensource",
    "coding/java/concurrent/JUC 常用 4 大并发工具类.md",
    "coding/java/concurrent",
    "coding/reverse-engineering/windows-reverse",
    "coding/reverse-engineering/linux-reverse",
    "coding/reverse-engineering/android-reverse",
    "coding/cpp/template",
    "coding/cpp/opensource/coroutine",
    "coding/cpp/opensource",
    "coding/cpp/low-level",
    "coding/cpp/learning",
    "0x99-image/Pasted image 20240902145755.png",
    "0x99-image/Pasted image 20240902145749.png",
    "0x99-image/Pasted image 20240902145736.png",
    "0x99-image/Pasted image 20240902145726.png",
    "0x99-image/Pasted image 20240902145719.png",
    "0x99-image/Pasted image 20240902145712.png",
    "0x99-image/Pasted image 20240902145655.png",
    "0x99-image/Pasted image 20240902145646.png",
    "0x99-image/Pasted image 20240902145638.png",
    "0x99-image/Pasted image 20240902145627.png"
  ]
}