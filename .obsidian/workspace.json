{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "f730344563a1f6df",
        "type": "tabs",
        "children": [
          {
            "id": "3d83eb1179956a39",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/os/linux/BPF/BPF内核实现详解.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/os/linux/BPF/BPF内核实现详解.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/os/linux/BPF/BPF内核实现详解.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/os/linux/BPF/BPF内核实现详解.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "3d83eb1179956a39",
  "lastOpenFiles": [
    "coding/os/linux/BPF/BPF案例分析(2)—XDP程序原理与案例讲解.md",
    "coding/os/linux/BPF/BPF C 编程入门.md",
    "coding/os/linux/BPF/BPF 高性能稳定跟踪机制 rawtracepoint 介绍和样例.md",
    "coding/os/linux/图文详解 Linux 分页机制！.md",
    "0x99-image/Pasted image 20240826090049.png",
    "0x99-image",
    "0x99-image/Pasted image 20240826090009.png",
    "0x00-graph/linux/debug.md",
    "coding/os/linux/BPF/从DPDK和eBPF感受一下Smart NIC.md",
    "coding/os/linux/BPF/抽丝剥茧：从 Linux 源码探索 eBPF 的实现.md",
    "coding/os/linux/BPF/边缘网络 eBPF 超能力：eBPF map 原理与性能解析.md",
    "coding/os/linux/Linux读写锁逻辑解析.md",
    "coding/os/linux/Linux Kernel：内存分页机制核心原理.md",
    "coding/os/linux/linux loop device 机制介绍.md",
    "coding/os/linux/Linux Mmap映射：优化文件访问和共享内存.md",
    "coding/os/linux/Linux后台开发调试经验分享.md",
    "coding/os/linux/Linux加密文件系统eCryptfs介绍.md",
    "coding/os/linux/linux内存回收(一）---kswapd回收.md",
    "coding/os/linux/Linux内核 Netlink机制分析与使用.md",
    "coding/os/linux/Linux内核-信号的传递过程.md",
    "coding/os/linux/Linux内核调试的方式以及工具集锦.md",
    "coding/os/linux/Linux中对【库函数】的调用进行跟踪的 3 种【插桩】技巧.md",
    "coding/os/linux/Linux系统虚拟化模型及障碍.md",
    "coding/os/linux/Linux内核Makefile执行流程.md",
    "coding/os/linux/Linux内核中的IPI(Inter-Processor Interrupt, 核间中断).md",
    "coding/os/linux/Linux内核源码研读与实战演练 (版本5.6.18).md",
    "0x00-graph/linux/memory.md",
    "coding/os/linux/Linux kernel中栈的介绍.md",
    "coding/os/linux/Linux IO 那些事儿.md",
    "0x99-image/Pasted image 20240826094141.png",
    "0x99-image/Pasted image 20240826094128.png",
    "0x99-image/Pasted image 20240826094109.png",
    "0x99-image/Pasted image 20240826094055.png",
    "0x99-image/Pasted image 20240826094041.png",
    "0x99-image/Pasted image 20240826094026.png",
    "0x99-image/Pasted image 20240826094011.png",
    "0x99-image/Pasted image 20240826093958.png",
    "entrance-point/Untitled",
    "0x00-graph/linux",
    "0x00-graph",
    "communication",
    "coding/frontend/Untitled",
    "coding/architecture/Untitled",
    "coding/reverse-engineering/Untitled",
    "coding/database/Untitled",
    "society"
  ]
}