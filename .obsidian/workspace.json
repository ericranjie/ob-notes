{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "7816db194f2e089a",
        "type": "tabs",
        "children": [
          {
            "id": "e2d90085bd089a6c",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/cpp/grammar/k_解读C++即将迎来的重大更新（二）：C++20的核心语言.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 359.50390243530273
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/cpp/grammar/k_解读C++即将迎来的重大更新（二）：C++20的核心语言.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/cpp/grammar/k_解读C++即将迎来的重大更新（二）：C++20的核心语言.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/cpp/grammar/k_解读C++即将迎来的重大更新（二）：C++20的核心语言.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "e2d90085bd089a6c",
  "lastOpenFiles": [
    "coding/cpp/grammar/k_曾被“劝退”的 C++ 20 正式发布！.md",
    "coding/cpp/grammar/i_C++ Trick：右值引用、万能引用傻傻分不清楚.md",
    "coding/cpp/grammar/b_深入分析C++全局变量初始化 文末热门招聘.md",
    "coding/cpp/lock/k_冷门知识点：进程间通信如何加锁？.md",
    "coding/cpp/lock/b_n_详解C++高性能无锁队列的原理与实现.md",
    "coding/cpp/low-level/i_sizeof(void)之谜.md",
    "coding/cpp/memory/高性能C++内存池：解密并发环境下的内存管理.md",
    "coding/cpp/memory/k_内存池设计与实现.md",
    "coding/cpp/lock",
    "coding/cpp/schedule",
    "coding/cpp/memory",
    "coding/cpp/schedule/k_C++ 线程的使用.md",
    "coding/cpp/STL/b_n_C++ STL之合并、反转和其他算法.md",
    "coding/cpp/STL",
    "coding/cpp/memory/k_C++常见的三种内存破的场景和分析.md",
    "zx99-image/Pasted image 20241009083212.png",
    "zx99-image/Pasted image 20241009083507.png",
    "zx99-image/Pasted image 20241009083446.png",
    "coding/cpp/idiom/a_n_惊爆C C++编程技巧 解锁无限可能的黑科技.md",
    "coding/cpp/learning/内推字节 Linux C C++ 开发的那位同学没通过面试.......md",
    "zx99-image/Pasted image 20241009082503.png",
    "coding/os/linux/memory/cache/a_n_深入理解CPU缓存：性能优化的关键.md",
    "zx99-image/Pasted image 20241009082619.png",
    "zx99-image/Pasted image 20241009082533.png",
    "README.md",
    "coding/os/linux/memory/cache/a_n_一篇论文讲透Cache优化.md",
    "coding/os/linux/memory/cache/a_n_cache的58问，您能回答上来几个？.md",
    "coding/os/linux/memory/cache/b_这篇 CPU Cache，估计也没人看.md",
    "coding/os/linux/memory/cache/b_arm64 cache机制分析.md",
    "coding/os/linux/memory/cache/c_写一个使用perf分析cache的示例.md",
    "coding/os/linux/memory/cache/b_深入理解CPU缓存一致性协议MESI（建议收藏）.md",
    "zx99-image/Pasted image 20241009081347.png",
    "zx99-image/Pasted image 20241009081537.png",
    "zx99-image/Pasted image 20241009081518.png",
    "zx99-image/Pasted image 20241009081456.png",
    "coding/os/linux/memory/i_看懂服务器 CPU 内存支持，学会计算内存带宽.md",
    "coding/os/linux/memory/a_n_从内核世界透视 mmap 内存映射的本质（源码实现篇）.md",
    "coding/cpp/learning/a_n_C++知识体系总结：语言核心与代码工程.md",
    "coding/cpp/learning/i_n_研究了一波RTTI，再介绍软件开发的201个原则，文末再送6本书.md",
    "coding/cpp/learning/c_C语言深度指南《Modern C》迎来再版，免费PDF资源一并放出书.md",
    "coding/os/linux/memory/reclaim",
    "coding/os/linux/memory/page-folio",
    "coding/os/linux/memory/hardware",
    "coding/cpp/idiom",
    "learning",
    "coding/app/nginx",
    "Untitled.canvas",
    "0x01-leetcode/math-logic/Untitled.canvas",
    "0x01-leetcode/1-dimensional/linked-list/Untitled.canvas"
  ]
}