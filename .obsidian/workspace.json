{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "f730344563a1f6df",
        "type": "tabs",
        "children": [
          {
            "id": "34d0339386a1f6c8",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/os/linux/io/深入揭秘 epoll 是如何实现 IO 多路复用的.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/os/linux/io/深入揭秘 epoll 是如何实现 IO 多路复用的.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/os/linux/io/深入揭秘 epoll 是如何实现 IO 多路复用的.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/os/linux/io/深入揭秘 epoll 是如何实现 IO 多路复用的.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "34d0339386a1f6c8",
  "lastOpenFiles": [
    "coding/os/linux/schedule/内核抢占，让世界变得更美好.md",
    "coding/os/linux/memory/论好名字的重要性： Linux内核page到folio的变迁.md",
    "coding/os/linux/learning/高性能服务器开发学习专栏汇总.md",
    "coding/os/linux/filesystem/文件系统：ext4、ntfs、xfs、btrfs、zfs、f2fs和reiserFS性能测试对比.md",
    "coding/os/linux/performance/好书推荐--《代码优化：有效使用内存》.md",
    "coding/os/linux/debug/内存泄漏-原因、避免以及定位.md",
    "coding/os/linux/io/盘点Linux Epoll那些致命弱点.md",
    "coding/os/linux/io/浅析Linux sockfs文件系统.md",
    "coding/os/linux/如何提升CMA利用率？.md",
    "coding/os/linux/device/驱动加载的本质.md",
    "coding/os/linux/memory/郭健： Linux内存逆向映射（reverse mapping）技术的前世今生.md",
    "coding/os/linux/schedule/多线程死锁检测的分析与实现(linux c)-有向图的应用.md",
    "coding/os/linux/memory/聊聊内存模型与内存序.md",
    "coding/os/linux/memory/解决 Linux 内核 Section GC 失败问题 - Part 1.md",
    "coding/os/linux/io/超专业解析！10分钟带你搞懂Linux中直接I O原理.md",
    "coding/os/linux/io/架构必知：深入理解Linux IO系统.md",
    "coding/os/linux/io/大疆一面：请说出水平触发和边缘触发的区别？.md",
    "coding/os/linux/memory/深入理解Linux内核之脏页跟踪.md",
    "coding/os/linux/深入理解TLB.md",
    "0x00-graph/linux/schedule.md",
    "coding/os/linux/network/Linux 虚拟网络设备之 bridge.md",
    "coding/os/linux/io/彻底搞懂IO多路复用.md",
    "coding/os/linux/device/学习下 eMMC.md",
    "coding/os/linux/memory/图文详解 Linux 分页机制！.md",
    "coding/os/linux/debug/内核内存错误检测工具KFENCE.md",
    "coding/os/linux/modules/图解 Linux进程通信 - 管道实现.md",
    "coding/os/linux/shell",
    "coding/os/linux/virtual",
    "0x99-image/Pasted image 20240829154814.png",
    "coding/os/linux/learning",
    "0x99-image/Pasted image 20240829155437.png",
    "0x99-image/Pasted image 20240829155424.png",
    "0x99-image/Pasted image 20240829155410.png",
    "0x99-image/Pasted image 20240829155355.png",
    "0x99-image/Pasted image 20240829155328.png",
    "0x99-image/Pasted image 20240829155311.png",
    "0x99-image/Pasted image 20240829155255.png",
    "0x99-image/Pasted image 20240829155235.png",
    "0x99-image/Pasted image 20240829155221.png",
    "coding/os/linux/build",
    "coding/os/linux/timer",
    "coding/os/linux/performance",
    "coding/os/linux/memory/cache",
    "coding/os/linux/schedule/debug",
    "coding/os/linux/schedule/locking/Untitled",
    "coding/os/linux/schedule/lock"
  ]
}