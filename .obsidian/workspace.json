{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "7816db194f2e089a",
        "type": "tabs",
        "children": [
          {
            "id": "21d9fe15fdd168c6",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/reverse-engineering/k_ARM64 的多核启动流程分析.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "tag:#1、正常UAF",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 359.50390243530273
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/reverse-engineering/k_ARM64 的多核启动流程分析.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/reverse-engineering/k_ARM64 的多核启动流程分析.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/reverse-engineering/k_ARM64 的多核启动流程分析.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "21d9fe15fdd168c6",
  "lastOpenFiles": [
    "coding/reverse-engineering/bn_16位实模式切换32位保护模式过程详解.md",
    "zx99-image/Pasted image 20241004194221.png",
    "coding/reverse-engineering/bn_高Glibc版本下的堆骚操作解析.md",
    "zx99-image/Pasted image 20241004202413.png",
    "zx99-image/Pasted image 20241004202218.png",
    "zx99-image/Pasted image 20241004202154.png",
    "zx99-image/Pasted image 20241004202135.png",
    "Pasted image 20241004202131.png",
    "zx99-image/Pasted image 20241004201944.png",
    "coding/reverse-engineering/an_VM逆向，一篇就够了.md",
    "coding/reverse-engineering/kn_一文搞懂  ARM MMU.md",
    "coding/reverse-engineering/kn_Kernel从0开始.md",
    "coding/os/linux/debug/bn_问题排查利器：Linux 原生跟踪工具 Ftrace 必知必会.md",
    "README.md",
    "zx99-image/Pasted image 20241004194309.png",
    "interview/k_大疆嵌入式一面：Linux如何查找内存泄露和内存占用过大？.md",
    "coding/os/linux/debug/bn_Linux内核 Netlink机制分析与使用.md",
    "coding/os/linux/debug/p_冰河为啥有很多时间写文章，录视频？关键在于事倍功倍！！.md",
    "coding/os/linux/debug/b_《Load高故障分析》学习笔记.md",
    "coding/os/linux/debug/trace/k_ftrace时间精度issue修复.md",
    "coding/os/linux/debug/KFENCE/k_Linux Kfence 详解.md",
    "zx99-image/Pasted image 20241004165853.png",
    "coding/os/linux/debug/GDB/p_使用 GDB + Qemu 调试 Linux 内核.md",
    "coding/os/linux/debug/ASAN/bn_深入分析HWASAN检测内存错误原理.md",
    "zx99-image/Pasted image 20241004170130.png",
    "coding/os/linux/device/kn_libdrm-modetest 原理及图显系统验证方法.md",
    "coding/os/linux/device/kn_Linux V4L2子系统与视频编解码设备介绍.md",
    "coding/os/linux/device/i_Linux reset framework.md",
    "coding/os/linux/device/i_基于Hikey的 Boot from USB 调试.md",
    "coding/os/linux/device/k_如何使能500个virtio_blk设备.md",
    "coding/os/linux/device/i_致驱动工程师的一封信.md",
    "coding/os/linux/device/i_驱动加载的本质.md",
    "coding/os/linux/device/GPIO/i_linux内核中的GPIO系统之（1）：软件框架.md",
    "coding/os/linux/device/eMMC/k_Linux MMC framework(2)_host controller driver.md",
    "coding/os/linux/device/eMMC/i_MMC SD SDIO介绍.md",
    "coding/os/linux/device/eMMC/i_Linux MMC framework(1)_软件架构.md",
    "Untitled.canvas",
    "coding/cpp/grammar/Untitled",
    "0x01-leetcode/2-dimensional/tree/binary-search-tree/delete",
    "0x01-leetcode/2-dimensional/tree/binary-search-tree/unique-BST",
    "0x01-leetcode/2-dimensional/tree/binary-search-tree",
    "0x01-leetcode/2-dimensional/tree/path-sum",
    "0x01-leetcode/2-dimensional/tree/traversal/postorder",
    "0x01-leetcode/2-dimensional/tree/traversal/inorder",
    "0x01-leetcode/2-dimensional/tree/traversal/preorder",
    "0x01-leetcode/2-dimensional/tree/traversal/level-order/populate-right-pointer",
    "0x01-leetcode/2-dimensional/tree/traversal/level-order",
    "0x01-leetcode/math-logic/Untitled.canvas",
    "0x01-leetcode/1-dimensional/linked-list/Untitled.canvas"
  ]
}