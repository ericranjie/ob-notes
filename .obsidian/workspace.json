{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "05be670b1340e2ed",
        "type": "tabs",
        "children": [
          {
            "id": "36c876f1da30a788",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/os/linux/CPU/ARM CPU性能实验.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "图解 Linux  管道通信的原理？",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/os/linux/CPU/ARM CPU性能实验.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/os/linux/CPU/ARM CPU性能实验.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/os/linux/CPU/ARM CPU性能实验.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "36c876f1da30a788",
  "lastOpenFiles": [
    "coding/os/linux/CPU/“DPU”非DPU.md",
    "coding/os/linux/device/device_tree/Device Tree（一）：背景介绍.md",
    "coding/os/linux/device/eMMC/Linux MMC framework(2)_host controller driver.md",
    "coding/os/linux/device/device_tree",
    "coding/os/linux/device/device_model/Linux设备模型(1)_基本概念.md",
    "coding/os/linux/device/GPIO/linux内核中的GPIO系统之（1）：软件框架.md",
    "coding/os/linux/device/device_model",
    "coding/os/linux/device/GPIO/linux内核中的GPIO系统之（5）：gpio subsysem和pinctrl subsystem之间的耦合.md",
    "coding/os/linux/device/GPIO",
    "coding/os/linux/device/GPIO/linux内核中的GPIO系统之（4）：pinctrl驱动的理解和总结.md",
    "coding/os/linux/device/Linux V4L2子系统与视频编解码设备介绍.md",
    "coding/os/linux/filesystem/f_为什么会有文件系统(二).md",
    "coding/os/linux/filesystem/一例ext4使用的jbd2模块死锁分析.md",
    "coding/os/linux/filesystem/Linux文件系统十问.md",
    "coding/os/linux/io/以小窥大：IO 卡顿探寻苹果文件系统.md",
    "coding/os/linux/io/p_架构必知：深入理解Linux IO系统.md",
    "coding/os/linux/io/直播回顾：如何对付臭名昭著的 IO 夯？诊断利器来了 龙蜥技术.md",
    "coding/os/linux/io/epoll/p_盘点Linux Epoll那些致命弱点.md",
    "coding/os/linux/io/epoll/a_大疆一面：请说出水平触发和边缘触发的区别？.md",
    "coding/os/linux/io/p_深入理解 Linux的 I O 系统.md",
    "coding/os/linux/io/深入理解 Linux 异步 IO 框架 io_uring.md",
    "0x99-image/Pasted image 20240911163105.png",
    "0x99-image/Pasted image 20240911163906.png",
    "coding/os/linux/io/深入理解SR-IOV和IO虚拟化.md",
    "coding/os/linux/io/epoll/深入理解 Linux 的 epoll 机制.md",
    "coding/os/linux/io/浅析Linux sockfs文件系统.md",
    "0x99-image/Pasted image 20240911163443.png",
    "0x99-image/Pasted image 20240911163207.png",
    "0x99-image/Pasted image 20240911163159.png",
    "0x99-image/Pasted image 20240911163154.png",
    "0x99-image/Pasted image 20240911163150.png",
    "0x99-image/Pasted image 20240911163111.png",
    "coding/os/linux/io/关于linux io_uring性能测试及其 实现原理的一些探索.md",
    "coding/os/linux/io/图解 Linux  管道通信的原理？.md",
    "README.md",
    "test/2024-09-01.md",
    "coding/os/linux/io/epoll/a_ 深入揭秘 epoll 是如何实现 IO 多路复用的.md",
    "coding/os/linux/io/epoll",
    "0x99-image/Pasted image 20240911093408.png",
    "0x99-image/Pasted image 20240911093626.png",
    "coding/java/Spring",
    "coding/cpp/opensource/qt",
    "coding/cpp/opensource/protobuf",
    "coding/cpp/opensource/memory",
    "coding/cpp/opensource/boost",
    "coding/algorithm/sort",
    "Untitled.canvas"
  ]
}