{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "761df311f0cdb8fe",
        "type": "tabs",
        "children": [
          {
            "id": "55dec6effde51c58",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/os/linux/schedule/k_Kernel同步机制的底层实现.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 359.50390243530273
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/os/linux/schedule/k_Kernel同步机制的底层实现.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/os/linux/schedule/k_Kernel同步机制的底层实现.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/os/linux/schedule/k_Kernel同步机制的底层实现.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "55dec6effde51c58",
  "lastOpenFiles": [
    "coding/os/linux/schedule/interrupt/d_Linux中断虚拟化（二）.md",
    "README.md",
    "coding/os/linux/schedule/interrupt/i_Linux kernel的中断子系统之（一）：综述.md",
    "coding/os/linux/schedule/k_从CPU层次结构到调度域的建立.md",
    "coding/os/linux/schedule/i_Linux内核同步机制之（二）：Per-CPU变量.md",
    "ztrash/b_RISC-V架构系列之1：指令集和特权模式.md",
    "ztrash/一文搞懂大模型、RAG、函数调用、Agent、知识库、向量数据库、知识图谱、AGI的区别和联系！！.md",
    "ztrash",
    "0x01-leetcode/algorithm/backtracking/n-queens/h_51. N-Queens.md",
    "zx99-image/Pasted image 20241009114447.png",
    "coding/os/linux/syscall/i_Linux 多线程全面解析.md",
    "zx99-image/Pasted image 20241009113121.png",
    "zx99-image/Pasted image 20241009113143.png",
    "coding/cpp/low-level/a_做引擎开发，更需要深入 C++ 内存管理.md",
    "zx99-image/Pasted image 20241009113502.png",
    "zx99-image/Pasted image 20241009113451.png",
    "zx99-image/Pasted image 20241009113422.png",
    "zx99-image/Pasted image 20241009113409.png",
    "zx99-image/Pasted image 20241009113354.png",
    "zx99-image/Pasted image 20241009113341.png",
    "zx99-image/Pasted image 20241009113253.png",
    "coding/cpp/low-level/C C++ 内存泄漏-原因、避免以及定位.md",
    "coding/cpp/idiom/a_n_惊爆C C++编程技巧 解锁无限可能的黑科技.md",
    "coding/cpp/grammar/pointer/b_C++ 智能指针最佳实践&源码分析.md",
    "coding/cpp/grammar/b_深入分析C++全局变量初始化 文末热门招聘.md",
    "coding/app/SOTA技术概述.md",
    "coding/app/a_云风Skynet源码剖析及原理实战（一）.md",
    "coding/os/linux/memory/memory-manage/i_linux kernel内存碎片防治技术.md",
    "coding/os/linux/schedule/i_正确认识实时Linux内核.md",
    "coding/os/linux/memory/memory-init/k_内存初始化代码分析（一）：identity mapping和kernel image mapping.md",
    "coding/os/linux/memory/memory-init/d_内存初始化代码分析（三）：创建系统内存地址映射.md",
    "coding/cpp/low-level/a_C++ 内存管理（一）.md",
    "coding/cpp/grammar/C++ 日期和时间编程.md",
    "coding/cpp/grammar/an_万字长文带你掌握C++11中auto和decltype的用法和区别.md",
    "coding/cpp/grammar/b_（文末赠书）学了许多年 C++ 终于想通了.......md",
    "coding/cpp/grammar/「现代C++设计魅力」虚函数继承-thunk技术初探.md",
    "coding/cpp/grammar/reflect/C++反射TS初探.md",
    "coding/cpp/schedule/coroutine",
    "coding/cpp/schedule",
    "coding/cpp/memory",
    "coding/cpp/lock",
    "coding/cpp/STL",
    "coding/os/linux/memory/reclaim",
    "coding/os/linux/memory/page-folio",
    "coding/os/linux/memory/hardware",
    "coding/cpp/idiom",
    "Untitled.canvas",
    "0x01-leetcode/math-logic/Untitled.canvas",
    "0x01-leetcode/1-dimensional/linked-list/Untitled.canvas"
  ]
}