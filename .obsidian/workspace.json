{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "e53169d3ce7754f2",
        "type": "tabs",
        "children": [
          {
            "id": "8f89ebea9bc76c8a",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/cpp/使用Boost库实现自动数量的虚函数.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/cpp/使用Boost库实现自动数量的虚函数.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/cpp/使用Boost库实现自动数量的虚函数.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/cpp/使用Boost库实现自动数量的虚函数.md"
              }
            }
          }
        ],
        "currentTab": 3
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "8f89ebea9bc76c8a",
  "lastOpenFiles": [
    "coding/architecture/微信支付的架构到底有多牛？.md",
    "coding/cpp/使用Boost库实现自动数量的虚函数.md",
    "coding/cpp/推荐学习这个开源项目.md",
    "coding/Quote.md",
    "coding/java/Netty如何高效接收网络数据？一文聊透ByteBuffer动态自适应扩缩容机制.md",
    "coding/algorithm/聊一聊最近面试微信问到的一个技术点～.md",
    "coding/database/Redis 7.0 共享复制缓冲区的设计与实现.md",
    "coding/architecture/10分钟搞懂！消息队列选型全方位对比.md",
    "coding/architecture/领域驱动设计：从理论到实践，一文带你掌握DDD！.md",
    "coding/java/看下有多少人对Java感兴趣？.md",
    "coding/java/深入理解Java内存架构.md",
    "coding/architecture/重新认识访问者模式：从实践到本质.md",
    "coding/architecture/互联网公司常用架构模式梳理.md",
    "coding/os/Kubernetes 微内核的分布式操作系统.md",
    "coding/database/Redis 7.0 Multi Part AOF的设计和实现.md",
    "coding/cpp/链路追踪（Tracing）的前世今生（上）.md",
    "coding/architecture/干掉visio，这个画图神器真的绝了！！！.md",
    "coding/reverse-engineering/核弹级漏洞——Apache Log4j 2 远程代码执行漏洞事件详情及修复方式.md",
    "coding/architecture/国外一位女黑客分享的API 安全（上篇）.md",
    "coding/java/十亿级流量下，我与Redis时延小突刺的战斗史.md",
    "coding/reverse-engineering/少量虚假控制流混淆后的算法还原案例.md",
    "coding/reverse-engineering/Android APP漏洞之战——Activity漏洞挖掘详解.md",
    "coding/reverse-engineering/Android APP漏洞之战——Content Provider漏洞详解.md",
    "coding/os/linux/使用 logrotate 命令轮转和归档日志 Linux 中国.md",
    "coding/os/【中断】的本质.md",
    "coding/reverse-engineering/Android Linker详解.md",
    "coding/architecture/Untitled",
    "coding/reverse-engineering/Untitled",
    "coding/database/Untitled",
    "society",
    "self-improvement/learning-method",
    "coding/os/Untitled",
    "coding/rust",
    "coding/algorithm",
    "gitpush.sh",
    "coding/golang",
    "Pasted image 20240804095201.png"
  ]
}