{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "05be670b1340e2ed",
        "type": "tabs",
        "children": [
          {
            "id": "36c876f1da30a788",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/os/linux/CPU/p_CPU 多核指令 —— WFE 原理.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "图解 Linux  管道通信的原理？",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/os/linux/CPU/p_CPU 多核指令 —— WFE 原理.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/os/linux/CPU/p_CPU 多核指令 —— WFE 原理.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/os/linux/CPU/p_CPU 多核指令 —— WFE 原理.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "36c876f1da30a788",
  "lastOpenFiles": [
    "coding/os/linux/CPU/p_linux cpufreq framework(4)_cpufreq governor.md",
    "coding/os/linux/CPU/p_linux cpufreq framework(5)_ARM big Little driver.md",
    "coding/os/linux/CPU/p_一个likely的简单使用，背后却是对CPU工作原理的深刻理解.md",
    "coding/os/linux/CPU/p_linux cpufreq framework(3)_cpufreq core.md",
    "coding/os/linux/CPU/b_Linux CPU core的电源管理(5)_cpu control及cpu hotplug.md",
    "coding/os/linux/CPU/b_Linux 中 CPU 利用率是如何算出来的？.md",
    "coding/os/linux/CPU/p_CPU 是如何与内存交互的.md",
    "0x99-image/Pasted image 20240911195408.png",
    "0x99-image/Pasted image 20240911195525.png",
    "0x99-image/Pasted image 20240911195519.png",
    "0x99-image/Pasted image 20240911195512.png",
    "0x99-image/Pasted image 20240911195502.png",
    "0x99-image/Pasted image 20240911195456.png",
    "0x99-image/Pasted image 20240911195451.png",
    "0x99-image/Pasted image 20240911195446.png",
    "0x99-image/Pasted image 20240911195440.png",
    "0x99-image/Pasted image 20240911195434.png",
    "coding/os/linux/CPU/p_CPU 多核指令 —— WFE 原理.md",
    "coding/os/linux/build/计算机科学基础知识（三）静态库和静态链接.md",
    "coding/os/linux/build/Docker镜像瘦身：从1.43G到22.4MB.md",
    "coding/os/linux/BPF/抽丝剥茧：从 Linux 源码探索 eBPF 的实现.md",
    "coding/os/linux/BPF/基于 eBPF 的软件网络功能实现.md",
    "coding/os/linux/BPF/b_BPF C 编程入门.md",
    "coding/os/linux/BPF/b_eBPF 简史.md",
    "coding/os/linux/BPF/eBPF动手实践系列三：基于原生libbpf库的eBPF编程改进方案.md",
    "coding/os/linux/BPF/p_BPF 赋能调度器：万字详解 sched_ext 实现机制与工作流程【建议收藏】.md",
    "coding/os/linux/BPF/bpf在android逆向中的辅助效果.md",
    "coding/os/linux/BPF/p_eBPF Talk ringbuf 经验分享.md",
    "coding/os/linux/BPF/p_Linux内核实例解析系列-eBPF Map和eBPF Loop.md",
    "coding/os/linux/BPF/Linux eBPF学习路径.md",
    "coding/os/linux/memory/cache/深入理解CPU缓存一致性协议MESI（建议收藏）.md",
    "coding/os/linux/CPU/ARM CPU性能实验.md",
    "coding/os/linux/CPU/“DPU”非DPU.md",
    "coding/os/linux/device/device_tree/Device Tree（一）：背景介绍.md",
    "coding/os/linux/device/eMMC/Linux MMC framework(2)_host controller driver.md",
    "coding/os/linux/device/device_tree",
    "coding/os/linux/device/device_model/Linux设备模型(1)_基本概念.md",
    "coding/os/linux/device/device_model",
    "coding/os/linux/device/GPIO",
    "coding/os/linux/io/epoll",
    "coding/java/Spring",
    "coding/cpp/opensource/qt",
    "coding/cpp/opensource/protobuf",
    "coding/cpp/opensource/memory",
    "coding/cpp/opensource/boost",
    "coding/algorithm/sort",
    "Untitled.canvas"
  ]
}