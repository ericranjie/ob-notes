{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "f730344563a1f6df",
        "type": "tabs",
        "children": [
          {
            "id": "3d83eb1179956a39",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/os/linux/如何提升CMA利用率？.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/os/linux/如何提升CMA利用率？.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/os/linux/如何提升CMA利用率？.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/os/linux/如何提升CMA利用率？.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "3d83eb1179956a39",
  "lastOpenFiles": [
    "coding/os/linux/全方位剖析内核抢占机制.md",
    "coding/os/linux/驱动加载的本质.md",
    "coding/os/linux/浅析Linux sockfs文件系统.md",
    "0x99-image/Pasted image 20240826200605.png",
    "coding/os/NOC总线架构拓扑介绍（转载）.md",
    "coding/os/RISC-V Linux 内核技术文章合集 第 7 期.md",
    "coding/os/Shopee 送命题：进程切换为什么比线程切换慢.md",
    "coding/reverse-engineering/内核层的三种Hook技术的使用.md",
    "coding/os/linux/内存泄漏-原因、避免以及定位.md",
    "coding/os/linux/内存管理：程序是如何被优雅的装载到内存中.md",
    "coding/os/linux/架构必知：Linux性能优化全景指南（建议收藏）.md",
    "coding/os/linux/架构必知：深入理解Linux IO系统.md",
    "coding/os/linux/基于qemu手写vhost virtio，简化虚拟设备通信.md",
    "coding/os/linux/好书推荐--《代码优化：有效使用内存》.md",
    "coding/os/linux/从CPU层次结构到调度域的建立.md",
    "coding/os/linux/从用户态、内核态、全局变量、BSS函数看进程运行状态.md",
    "coding/os/linux/彻底搞懂IO多路复用.md",
    "0x00-graph/linux/io.md",
    "0x99-image/Pasted image 20240826200923.png",
    "0x99-image/Pasted image 20240826200853.png",
    "0x99-image/Pasted image 20240826200840.png",
    "0x99-image/Pasted image 20240826200823.png",
    "0x99-image/Pasted image 20240826200805.png",
    "0x99-image/Pasted image 20240826200747.png",
    "0x99-image/Pasted image 20240826200727.png",
    "0x99-image/Pasted image 20240826200711.png",
    "0x99-image/Pasted image 20240826200655.png",
    "coding/os/linux/超专业解析！10分钟带你搞懂Linux中直接I O原理.md",
    "coding/os/linux/案例分析 - 内存泄露的排查方法.md",
    "coding/os/linux/30分钟读懂Linux五大模块内核源码，内核整体架构设计.md",
    "coding/os/linux/7 张图，轻松掌握零拷贝原理.md",
    "coding/os/linux/【万字长文】带你搞定MMU&TLB&TWU.md",
    "coding/os/linux/「linux」孤儿进程与僵尸进程产生及其处理.md",
    "coding/os/linux/“做时间的朋友” – 浅谈linux kernel中形形色色的cputime.md",
    "coding/os/linux/BPF/Tetragon进程阻断原理.md",
    "coding/os/linux/BPF/eBPF综述 已付费.md",
    "0x99-image",
    "entrance-point/Untitled",
    "0x00-graph/linux",
    "0x00-graph",
    "communication",
    "coding/frontend/Untitled",
    "coding/architecture/Untitled",
    "coding/reverse-engineering/Untitled",
    "coding/database/Untitled",
    "society"
  ]
}