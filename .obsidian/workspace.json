{
  "main": {
    "id": "1be727c92b2e14f0",
    "type": "split",
    "children": [
      {
        "id": "30d24f811d1b06b5",
        "type": "tabs",
        "children": [
          {
            "id": "550c24418126d846",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "coding/os/linux/network/debug/用户态 tcpdump 如何实现抓到内核网络包的?.md",
                "mode": "source",
                "source": false
              }
            }
          }
        ]
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "daa24d14e57a5bba",
    "type": "split",
    "children": [
      {
        "id": "754e0d401164d83b",
        "type": "tabs",
        "children": [
          {
            "id": "97c141a77dfb8bbf",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "3024df327b38b2bb",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "图解 Linux  管道通信的原理？",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              }
            }
          },
          {
            "id": "d16b970b8dd24de1",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {}
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300
  },
  "right": {
    "id": "0ed372e18b255e27",
    "type": "split",
    "children": [
      {
        "id": "c082f741bebf07bf",
        "type": "tabs",
        "children": [
          {
            "id": "510cec816bc213d3",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "file": "coding/os/linux/network/debug/用户态 tcpdump 如何实现抓到内核网络包的?.md",
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "cc3f2ddc07078680",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "coding/os/linux/network/debug/用户态 tcpdump 如何实现抓到内核网络包的?.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              }
            }
          },
          {
            "id": "3ad12460d1b0e66d",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              }
            }
          },
          {
            "id": "22fe08aa63327cdd",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "coding/os/linux/network/debug/用户态 tcpdump 如何实现抓到内核网络包的?.md"
              }
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 300,
    "collapsed": true
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:Open quick switcher": false,
      "graph:Open graph view": false,
      "canvas:Create new canvas": false,
      "daily-notes:Open today's daily note": false,
      "templates:Insert template": false,
      "command-palette:Open command palette": false
    }
  },
  "active": "97c141a77dfb8bbf",
  "lastOpenFiles": [
    "coding/os/linux/network/深入理解 Linux socket.md",
    "coding/os/linux/network/向左向右 网络IO卸载.md",
    "coding/os/linux/network/debug/p_Linux内核常见的网络丢包场景分析.md",
    "coding/os/linux/network/debug/p_Wireshark的抓包和分析，看这篇就够了！.md",
    "coding/os/linux/network/debug/p_virtio-net 的前后端延迟高分析.md",
    "coding/os/linux/network/debug/一个 TCP 发送缓冲区问题的解析.md",
    "coding/os/linux/network/debug/mellanox的网卡故障分析.md",
    "0x99-image/Pasted image 20240918132659.png",
    "coding/os/linux/network/debug",
    "0x99-image/Pasted image 20240918134755.png",
    "0x99-image/Pasted image 20240918134750.png",
    "0x99-image/Pasted image 20240918134745.png",
    "0x99-image/Pasted image 20240918134738.png",
    "0x99-image/Pasted image 20240918134734.png",
    "0x99-image/Pasted image 20240918134728.png",
    "0x99-image/Pasted image 20240918134723.png",
    "0x99-image/Pasted image 20240918134718.png",
    "0x99-image/Pasted image 20240918134712.png",
    "coding/os/linux/network/t_linux loop device 机制介绍.md",
    "coding/os/linux/network/d_以太网驱动的流程浅析(四)-以太网驱动probe流程.md",
    "coding/os/linux/virtual-machine/b_深入理解虚拟化.md",
    "coding/os/linux/network/b_iptables 长文详解，值得收藏细读.md",
    "coding/os/linux/network/k_Linux-服务器的全连接队列(Accept队列).md",
    "coding/os/linux/virtual-machine/p_QEMU虚拟机管理器：一种高效硬件模拟器.md",
    "coding/os/linux/virtual-machine/d_Linux系统虚拟化模型及障碍.md",
    "coding/os/linux/syscall/i_Linux 多线程全面解析.md",
    "test/self_notes.md",
    "README.md",
    "coding/os/linux/memory/memory-manage/slub/i_slub分配器.md",
    "coding/os/linux/memory/memory-manage/a_Meltdown论文翻译.md",
    "coding/os/linux/memory/memory-manage/五万字 深入理解Linux内存管理.md",
    "coding/os/linux/memory/memory-manage/i_Linux kernel内存管理的基本概念.md",
    "coding/os/linux/memory/memory-manage/i_linux kernel内存碎片防治技术.md",
    "coding/os/linux/memory/memory-manage/i_linux kernel内存回收机制.md",
    "coding/os/linux/memory/memory-manage/k_Linux Kernel：内存分页机制核心原理.md",
    "coding/os/linux/memory/memory-manage/i_文件系统和裸块设备的page cache问题.md",
    "coding/os/linux/memory/memory-manage/b_linux内存回收(一）---kswapd回收.md",
    "coding/os/ARM/init",
    "coding/os/linux/device/device_tree",
    "coding/os/linux/device/device_model",
    "coding/os/linux/device/GPIO",
    "coding/os/linux/io/epoll",
    "coding/java/Spring",
    "coding/cpp/opensource/qt",
    "coding/cpp/opensource/protobuf",
    "coding/cpp/opensource/memory",
    "Untitled.canvas"
  ]
}